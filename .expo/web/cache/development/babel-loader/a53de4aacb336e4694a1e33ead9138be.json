{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\n\nvar Members = function (_React$Component) {\n  _inherits(Members, _React$Component);\n\n  var _super = _createSuper(Members);\n\n  function Members() {\n    _classCallCheck(this, Members);\n\n    return _super.apply(this, arguments);\n  }\n\n  return Members;\n}(React.Component);\n\nexport { Members as default };","map":{"version":3,"sources":["/home/skyfighttv/Documents/GitHub/TFC/src/project/membres/Members.js"],"names":["React","Members","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEqBC,O;;;;;;;;;;;;EAAgBD,KAAK,CAACE,S;;SAAtBD,O","sourcesContent":["import React from \"react\";\n\nexport default class Members extends React.Component {\n\n}"]},"metadata":{},"sourceType":"module"}